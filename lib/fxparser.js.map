{"version":3,"file":"./lib/fxparser.js","mappings":"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","sources":["webpack://fxparser/./node_modules/strnum/strnum.js","webpack://fxparser/./src/fxp.js","webpack://fxparser/./src/util.js","webpack://fxparser/./src/validator.js","webpack://fxparser/./src/xmlparser/DocTypeReader.js","webpack://fxparser/./src/xmlparser/OptionsBuilder.js","webpack://fxparser/./src/xmlparser/OrderedObjParser.js","webpack://fxparser/./src/xmlparser/XMLParser.js","webpack://fxparser/./src/xmlparser/node2json.js","webpack://fxparser/./src/xmlparser/xmlNode.js","webpack://fxparser/webpack/bootstrap","webpack://fxparser/webpack/before-startup","webpack://fxparser/webpack/startup","webpack://fxparser/webpack/after-startup"],"sourcesContent":["const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nconst buildOptions = function(options, defaultOptions, props) {\n  let newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\nexports.buildOptions = buildOptions;\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\nconst props = [\n  'allowBooleanAttributes',\n  'unpairedTags'\n];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n};\n   \nconst props = [\n    'preserveOrder',\n    'attributeNamePrefix',\n    'attributesGroupName',\n    'textNodeName',\n    'ignoreAttributes',\n    'removeNSPrefix',\n    'allowBooleanAttributes',\n    'parseTagValue',\n    'parseAttributeValue',\n    'trimValues',\n    'cdataPropName',\n    'tagValueProcessor',\n    'attributeValueProcessor',\n    'numberParseOptions',\n    'stopNodes',\n    'alwaysCreateTextNode',\n    'isArray',\n    'commentPropName',\n    'unpairedTags',\n    'processEntities',\n    'htmlEntities'\n];\n  \nconst util = require('../util');\n\nconst buildOptions = function(options) {\n    return util.buildOptions(options, defaultOptions, props);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;\nexports.props = props;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"amp\" : { regex: /&(amp|#38|#x26);/g, val : \"&\"},\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      const aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(currentNode){\n          textData = this.parseTextData(textData\n            , currentNode.tagname\n            , jPath\n            ,false\n            , currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false\n            , Object.keys(currentNode.child).length === 0);\n          if(textData !== undefined &&  textData !== \"\") currentNode.add(this.options.textNodeName, textData);\n          textData = \"\";\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        let result = readTagExp(xmlData,i, false, \"?>\");\n        if(!result) throw new Error(\"Pi Tag is not closed.\");\n        \n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n          //TODO: remove repeated code\n          if(textData){ //store previously collected data as textNode\n            textData = this.parseTextData(textData\n              , currentNode.tagname\n              , jPath\n              ,false\n              , currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false\n              , Object.keys(currentNode.child).length === 0);\n\n            if(textData !== undefined &&  textData !== \"\") currentNode.add(this.options.textNodeName, textData);\n            textData = \"\";\n          }\n\n          const childNode = new xmlNode(tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        i = closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          //TODO: remove repeated code\n          if(textData){ //store previously collected data as textNode\n            textData = this.parseTextData(textData\n              , currentNode.tagname\n              , jPath\n              ,false\n              , currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false\n              , Object.keys(currentNode.child).length === 0);\n  \n            if(textData !== undefined &&  textData !== \"\") currentNode.add(this.options.textNodeName, textData);\n            textData = \"\";\n          }\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        if(textData){ //store previously collected data as textNode\n          textData = this.parseTextData(textData\n            , currentNode.tagname\n            , jPath\n            ,false\n            , currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false\n            , Object.keys(currentNode.child).length === 0);\n\n          if(textData !== undefined &&  textData !== \"\") currentNode.add(this.options.textNodeName, textData);\n          textData = \"\";\n        }\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(!val) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n       \n        let result = readTagExp(xmlData,i, this. options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.parseTextData(textData\n              , currentNode.tagname\n              , jPath\n              , false\n              , currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false\n              , false);\n            if(textData !== undefined &&  textData !== \"\") currentNode.add(this.options.textNodeName, textData);\n            textData = \"\";\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){}\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){}\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            \n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n  }\n  return val;\n}\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\" && xmlData[i+1] === \"/\"){ \n        const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n        let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n        if(closeTagName === tagName){\n          return {\n            tagContent: xmlData.substring(startIndex, i),\n            i : closeIndex\n          }\n        }\n        i=closeIndex;\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined) {\n        if(!Array.isArray(compressedObj[property])) {\n          compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/fxp.js\");\n",""],"names":["hexRegex","numRegex","Number","parseInt","window","parseFloat","consider","hex","leadingZeros","decimalPoint","eNotation","toNumber","str","options","Object","assign","trimmedStr","trim","skipLike","undefined","test","match","exec","sign","numTrimmedByZeros","trimZeros","length","num","numStr","search","indexOf","replace","substr","module","exports","validator","require","XMLParser","XMLValidator","nameStartChar","nameChar","nameRegexp","regexName","RegExp","getAllMatches","string","regex","matches","allmatches","startIndex","lastIndex","len","index","push","isName","isExist","v","isEmptyObject","obj","keys","merge","target","a","arrayMode","i","getValue","buildOptions","defaultOptions","props","newOptions","util","allowBooleanAttributes","unpairedTags","validate","xmlData","tags","tagFound","reachedRoot","readPI","err","tagStartPos","readCommentAndCDATA","closingTag","tagName","substring","validateTagName","msg","getErrorObject","getLineNumberForPosition","result","readAttributeStr","attrStr","value","attrStrStart","isValid","validateAttributeString","code","line","tagClosed","otg","pop","openPos","col","afterAmp","validateAmpersand","isWhiteSpace","JSON","stringify","map","t","char","start","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","validateNumberAmpersand","re","count","message","lineNumber","lines","split","readDocType","entities","hasBody","entity","comment","exp","Error","parseEntityExp","entityRegex","regx","val","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","tagValueProcessor","attributeValueProcessor","stopNodes","alwaysCreateTextNode","isArray","commentPropName","processEntities","htmlEntities","xmlNode","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","externalEntities","entKeys","ent","jPath","dontTrim","hasAttributes","isLeafNode","newval","parseValue","trimmedVal","prefix","charAt","attrsRegx","attrs","oldVal","aName","newVal","attrCollection","xmlObj","textData","ch","closeIndex","findClosingIndex","colonIndex","child","add","lastIndexOf","readTagExp","tagExp","attrExpPresent","childNode","addChild","endIndex","lastTag","tagContent","entityName","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","data","errMsg","closingIndex","separatorIndex","closeTagName","shouldParse","prettify","parse","validationOption","toString","orderedObjParser","orderedResult","addEntity","key","node","compress","arr","text","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","Array","attrMap","jpath","atrrName","propCount","XmlNode"],"sourceRoot":""}